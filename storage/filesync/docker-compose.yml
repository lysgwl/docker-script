
name: filesync

services:
  filesync-server:
    container_name: filesync
    image: filesync-image
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - HTTP_PROXY=${PROXY_HOST}
      - HTTPS_PROXY=${PROXY_HOST}
    volumes:
      - ${FILESYNC_PATH}/config:/config
      - ${FILESYNC_PATH}/data:/data
      - ${FILESYNC_PATH}/usr:/mnt/usr
      - ${NGINX_CONFIG_DIR}:/config/nginx
      - ${NGINX_PROXY_CONF_PATH}:/config/proxy_conf
      - ${DOWNLOADS_PATH}:/mnt/usr/downloads
      - nas-files:/mnt/usr/files
      - nas-project:/mnt/usr/project
      - nas-images:/mnt/usr/images
      - nas-photos:/mnt/usr/photos
      - nas-films:/mnt/usr/films
    env_file:
      - .env
    ports:
      #- '8015:5244'
      #- '8016:8384'
      #- '8080:8080'
      - '22000:22000/tcp'   # 文件传输端口映射（TCP）
      - '22000:22000/udp'   # 文件传输端口映射（UDP）
      - '21027:21027/udp'   # 设备发现端口映射（UDP）
    hostname: filesync
    networks:
      - local_network
    entrypoint: ["/bin/sh", "-c"]
    command: >
      '
        # 复制配置文件
        if [ -d "/config/nginx/extra/proxy-config" ]; then
            for conf in openlist.conf syncthing.conf; do
                src="/config/proxy_conf/$${conf}"
                dst="/config/nginx/extra/proxy-config/$${conf}"
                
                if [ -f "$${src}" ] && [ ! -f "$${dst}" ]; then
                    cp -v "$${src}" "$${dst}"
                fi
            done
        fi
        
        # 启动主进程
        exec /app/scripts/entrypoint.sh run
      '
    restart: unless-stopped

networks:
  local_network:
    external: true

volumes:
  nas-files:
    external: true
  nas-project:
    external: true
  nas-images:
    external: true
  nas-photos:
    external: true
  nas-films:
    external: true