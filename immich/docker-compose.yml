#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync                # [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] 
    volumes:
      - ${CONFIG_PATH}:/config
      - ${PHOTOS_PATH}:/photos
      - ${UPLOAD_PATH}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro 
    env_file:
      - .env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    networks:
      - immich  

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-openvino
    extends:
      file: hwaccel.ml.yml
      service: openvino                 # [armnn, cuda, openvino, openvino-wsl]
    volumes:
      - ${MODEL_CACHE_PATH}:/cache      # model-cache  
    env_file:
      - .env 
    restart: always
    healthcheck:
      disable: false
    networks:
      - immich  

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine
    volumes:
      - ${DATA_PATH}/redis:/data  
    healthcheck:
      test: redis-cli ping || exit 1  
    restart: always
    networks:
      - immich

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
    networks:
      - immich
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      # start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
    
networks:
  immich:
    name: immich
    driver: bridge  